{"version":3,"sources":["../../../src/@ionic-native/plugins/brightness/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAGxE;;;;;;;;;;;;;;;;;;;GAmBG;AASH;IAAgC,8BAAiB;IAAjD;;IAgCA,CAAC;IA9BC;;;;;OAKG;IAEH,kCAAa,GAAb,UAAc,KAAa,IAAkB,MAAM,CAAC,CAAC,CAAC;IAEtD;;;;;OAKG;IAEH,kCAAa,GAAb,cAAgC,MAAM,CAAC,CAAC,CAAC;IAEzC;;MAEE;IAEF,oCAAe,GAAf,UAAgB,KAAc,IAAU,CAAC;IAEpC,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IAtBA;QADC,OAAO,EAAE;;;;mDAC4C;IAStD;QADC,OAAO,EAAE;;;;mDAC+B;IAMzC;QADC,OAAO,EAAE;;;;qDAC+B;IAxB9B,UAAU;QARtB,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,2BAA2B;YACnC,SAAS,EAAE,4BAA4B;YACvC,IAAI,EAAE,qDAAqD;YAC3D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;SAC9B,CAAC;OAEW,UAAU,CAgCtB;IAAD,iBAAC;CAhCD,AAgCC,CAhC+B,iBAAiB,GAgChD;SAhCY,UAAU","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n\r\n/**\r\n * @name Brightness\r\n * @description\r\n * The Brightness plugin let you control the display brightness of your device.\r\n *\r\n * Requires Cordova plugin: `cordova-plugin-brightness`. For more info, please see the [Brightness plugin docs](https://github.com/mgcrea/cordova-plugin-brightness).\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { Brightness } from '@ionic-native/brightness';\r\n *\r\n * constructor(private brightness: Brightness) { }\r\n *\r\n * ...\r\n *\r\n * let brightnessValue: number = 0.8;\r\n * this.brightness.setBrightness(brightnessValue);\r\n * ```\r\n *\r\n */\r\n@Plugin({\r\n  pluginName: 'Brightness',\r\n  plugin: 'cordova-plugin-brightness',\r\n  pluginRef: 'cordova.plugins.brightness',\r\n  repo: 'https://github.com/mgcrea/cordova-plugin-brightness',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class Brightness extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Sets the brightness of the display.\r\n   *\r\n   * @param {value} Floating number between 0 and 1 in which case 1 means 100% brightness and 0 means 0% brightness.\r\n   * @returns {Promise<any>} Returns a Promise that resolves if setting brightness was successful.\r\n   */\r\n  @Cordova()\r\n  setBrightness(value: number): Promise<any> { return; }\r\n\r\n  /**\r\n   * Reads the current brightness of the device display.\r\n   *\r\n   * @returns {Promise<any>} Returns a Promise that resolves with the\r\n   * brightness value of the device display (floating number between 0 and 1).\r\n   */\r\n  @Cordova()\r\n  getBrightness(): Promise<any> { return; }\r\n\r\n  /**\r\n  * Keeps the screen on. Prevents the device from setting the screen to sleep.\r\n  */\r\n  @Cordova()\r\n  setKeepScreenOn(value: boolean): void { }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}